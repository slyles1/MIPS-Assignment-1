# MIPS Assignment 1
.data
	str: .space 32
	message1: .asciiz "\nEnter your 10 character string"
	newline: .asciiz "\n"
	message2: .asciiz " is not part of the base.\n"
	sum: .word 0

.text # for instructions
main:
	
	# prints message1
	li $v0, 4
	la $a0, message1
	syscall
	
	# read a string to operate on
	li $v0, 8
	la $a0, str
	li $a1, 11 # space for 11 characters
	syscall
	
	# print out new line
	li $v0, 4
	la $a0, newline
	syscall
	
	# print out str
	li $v0, 4        # system call code for print_str
    la $a0, str      # address of string to print
    syscall
	
	move $t7, $a0 # moves string into $t7 register

	# print out new line
	li $v0, 4
	la $a0, newline
	syscall
	
	
	# prints character at index 0
	li $t1, 10 # initialize register $t1 to 10
	li $t2, 0 # initialize byte number to 0
	
	for_loop:
	blt $t1, 1, exit # Branch less than 10 < 1
	
    lbu $a0, 0($t7) # Loads byte 0 of $t7 (str)
    li $v0, 11 # prints character
    syscall
    
    # Algorithm for checking characters
    li $t0, 0
    sgeu $s0, $t7, $t0 # set greater than equal unsigned $t7 0 >= 0; true
    # $s0 is 1
    bne $s0, $zero, check9
    
    # print out message2
	li $v0, 4
	la $a0, message2
	syscall
    
    
    return: # resumes after checking
    
    # iteration
    addi $t7, 1 # next char
	add $t2, $t2, 1 # Adds 1 to $t2 to get the next character
	sub $t1, $t1, 1 # --10
	
	j for_loop
	
	# Exit call
	li $v0, 0
	syscall

	#****************add condition
	check9:
	j return

	exit:
	li $v0, 0
	syscall